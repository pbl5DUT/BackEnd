# Generated by Django 4.2 on 2025-05-11 07:39

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('event_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('type', models.CharField(choices=[('MEETING', 'Meeting'), ('DEADLINE', 'Deadline'), ('REMINDER', 'Reminder'), ('OTHER', 'Other')], max_length=20)),
                ('projectId', models.CharField(blank=True, max_length=50, null=True)),
                ('userId', models.CharField(max_length=50)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('isAllDay', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField()),
                ('updatedAt', models.DateTimeField()),
            ],
            options={
                'db_table': 'api_calendar',
            },
        ),
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('chatroom_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=50)),
                ('related_team', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'api_chatroom',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Enterprise',
            fields=[
                ('enterprise_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('industry', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'api_enterprise',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('project_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('project_name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Planning', 'Planning'), ('In Progress', 'In Progress'), ('On Hold', 'On Hold'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled')], default='Planning', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('progress', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'api_project',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('task_id', models.AutoField(primary_key=True, serialize=False)),
                ('task_name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('TODO', 'To Do'), ('IN_PROGRESS', 'In Progress'), ('DONE', 'Done'), ('CANCELLED', 'Cancelled')], max_length=20)),
                ('deadline', models.DateField(blank=True, null=True)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='MEDIUM', max_length=20)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('actual_end_date', models.DateField(blank=True, null=True)),
                ('progress', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'api_task',
            },
        ),
        migrations.CreateModel(
            name='WorkReport',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly')], max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('userId', models.CharField(max_length=50)),
                ('userName', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SUBMITTED', 'Submitted'), ('REVIEWED', 'Reviewed')], default='DRAFT', max_length=20)),
                ('projectId', models.CharField(blank=True, max_length=50, null=True)),
                ('projectName', models.CharField(blank=True, max_length=255, null=True)),
                ('startDate', models.DateField()),
                ('endDate', models.DateField()),
                ('submittedDate', models.DateTimeField(blank=True, null=True)),
                ('reviewedDate', models.DateTimeField(blank=True, null=True)),
                ('reviewedBy', models.CharField(blank=True, max_length=50, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('challenges', models.TextField(blank=True, null=True)),
                ('nextSteps', models.TextField(blank=True, null=True)),
                ('createdAt', models.DateTimeField()),
                ('updatedAt', models.DateTimeField()),
            ],
            options={
                'db_table': 'api_workreport',
            },
        ),
        migrations.CreateModel(
            name='WorkReportTask',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('reportId', models.CharField(max_length=50)),
                ('taskId', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('TODO', 'To Do'), ('IN_PROGRESS', 'In Progress'), ('DONE', 'Done')], max_length=20)),
                ('progress', models.IntegerField()),
                ('timeSpent', models.FloatField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='api.workreport')),
            ],
            options={
                'db_table': 'api_workreporttask',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=60)),
                ('role', models.CharField(choices=[('Admin', 'Admin'), ('Manage', 'Manage'), ('User', 'User')], default='User', max_length=20)),
                ('department', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('province', models.CharField(blank=True, max_length=100, null=True)),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('position', models.CharField(blank=True, max_length=255, null=True)),
                ('avatar', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('enterprise', models.ForeignKey(db_column='enterprise_id', on_delete=django.db.models.deletion.CASCADE, related_name='users', to='api.enterprise')),
            ],
            options={
                'db_table': 'api_user',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('team_id', models.AutoField(primary_key=True, serialize=False)),
                ('team_name', models.CharField(max_length=255)),
                ('leader', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.user')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.project')),
            ],
        ),
        migrations.CreateModel(
            name='TaskComment',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('parent_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='api.taskcomment')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='api.task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_comments', to='api.user')),
            ],
            options={
                'db_table': 'api_taskcomment',
            },
        ),
        migrations.CreateModel(
            name='TaskAttachment',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('file_url', models.CharField(max_length=255)),
                ('file_type', models.CharField(max_length=50)),
                ('file_size', models.IntegerField()),
                ('uploaded_at', models.DateTimeField()),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='api.task')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_attachments', to='api.user')),
            ],
            options={
                'db_table': 'api_taskattachment',
            },
        ),
        migrations.CreateModel(
            name='TaskAssignee',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('assigned_date', models.DateTimeField(blank=True, null=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignees', to='api.task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_assignments', to='api.user')),
            ],
            options={
                'db_table': 'api_taskassignee',
            },
        ),
        migrations.AddField(
            model_name='task',
            name='assignee',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', to='api.user'),
        ),
        migrations.AddField(
            model_name='task',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='api.project'),
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('report_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('submitted_date', models.DateTimeField(auto_now_add=True)),
                ('submitted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.user')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='manager',
            field=models.ForeignKey(blank=True, db_column='manager_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_projects', to='api.user'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notification_id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('sent_date', models.DateTimeField()),
                ('sent_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='api.user')),
            ],
            options={
                'db_table': 'api_notification',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('message_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('content', models.TextField(blank=True, null=True)),
                ('attachment_url', models.CharField(blank=True, max_length=255, null=True)),
                ('attachment_type', models.CharField(blank=True, max_length=50, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('chatroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='api.chatroom')),
                ('receiver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_messages', to='api.user')),
                ('sent_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='api.user')),
            ],
            options={
                'db_table': 'api_message',
                'ordering': ['sent_at'],
            },
        ),
        migrations.CreateModel(
            name='KnowledgeCategory',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('iconUrl', models.CharField(blank=True, max_length=255, null=True)),
                ('createdBy', models.CharField(max_length=50)),
                ('createdAt', models.DateTimeField()),
                ('updatedAt', models.DateTimeField()),
                ('articleCount', models.IntegerField(default=0)),
                ('parentId', models.CharField(blank=True, max_length=50, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='api.knowledgecategory')),
            ],
            options={
                'db_table': 'api_knowledgecategory',
            },
        ),
        migrations.CreateModel(
            name='KnowledgeArticle',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('summary', models.TextField(blank=True, null=True)),
                ('categoryId', models.CharField(max_length=50)),
                ('createdBy', models.CharField(max_length=50)),
                ('createdAt', models.DateTimeField()),
                ('updatedAt', models.DateTimeField()),
                ('viewCount', models.IntegerField(default=0)),
                ('likeCount', models.IntegerField(default=0)),
                ('isFeatured', models.BooleanField(default=False)),
                ('isPublished', models.BooleanField(default=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='api.knowledgecategory')),
            ],
            options={
                'db_table': 'api_knowledgearticle',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('document_id', models.AutoField(primary_key=True, serialize=False)),
                ('file_name', models.CharField(max_length=255)),
                ('file_type', models.CharField(max_length=50)),
                ('uploaded_at', models.DateTimeField()),
                ('related_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='api.project')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_documents', to='api.user')),
            ],
            options={
                'db_table': 'api_document',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='api.user')),
                ('related_project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='api.project')),
                ('related_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='general_comments', to='api.task')),
            ],
            options={
                'db_table': 'api_comment',
            },
        ),
        migrations.CreateModel(
            name='ChatRoomParticipant',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('role', models.CharField(default='member', max_length=50)),
                ('chatroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.chatroom')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.user')),
            ],
            options={
                'db_table': 'api_chatroomparticipant',
                'unique_together': {('chatroom', 'user')},
            },
        ),
        migrations.AddField(
            model_name='chatroom',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_chatrooms', to='api.user'),
        ),
        migrations.AddField(
            model_name='chatroom',
            name='participants',
            field=models.ManyToManyField(related_name='chatrooms', through='api.ChatRoomParticipant', to='api.user'),
        ),
        migrations.AddField(
            model_name='chatroom',
            name='related_project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chatrooms', to='api.project'),
        ),
        migrations.CreateModel(
            name='CalendarEventParticipant',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('eventId', models.CharField(max_length=50)),
                ('userId', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('ACCEPTED', 'Accepted'), ('DECLINED', 'Declined')], default='PENDING', max_length=20)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='api.calendar')),
            ],
            options={
                'db_table': 'api_calendareventparticipant',
            },
        ),
        migrations.CreateModel(
            name='TeamUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_in_team', models.CharField(choices=[('Member', 'Member'), ('Lead', 'Lead'), ('Support', 'Support')], max_length=20)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.team')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.user')),
            ],
            options={
                'unique_together': {('team', 'user')},
            },
        ),
        migrations.CreateModel(
            name='ProjectUser',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('role_in_project', models.CharField(choices=[('Manager', 'Manager'), ('Member', 'Member'), ('Support', 'Support'), ('Observer', 'Observer')], max_length=20)),
                ('joined_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_members', to='api.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_assignments', to='api.user')),
            ],
            options={
                'db_table': 'api_projectuser',
                'unique_together': {('project', 'user')},
            },
        ),
    ]
