# Generated by Django 4.2 on 2025-05-11 05:47

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0003_alter_project_status'),
    ]

    operations = [
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('event_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('type', models.CharField(choices=[('MEETING', 'Meeting'), ('DEADLINE', 'Deadline'), ('REMINDER', 'Reminder'), ('OTHER', 'Other')], max_length=20)),
                ('projectId', models.CharField(blank=True, max_length=50, null=True)),
                ('userId', models.CharField(max_length=50)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('isAllDay', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField()),
                ('updatedAt', models.DateTimeField()),
            ],
            options={
                'db_table': 'api_calendar',
            },
        ),
        migrations.CreateModel(
            name='WorkReport',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly')], max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('userId', models.CharField(max_length=50)),
                ('userName', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SUBMITTED', 'Submitted'), ('REVIEWED', 'Reviewed')], default='DRAFT', max_length=20)),
                ('projectId', models.CharField(blank=True, max_length=50, null=True)),
                ('projectName', models.CharField(blank=True, max_length=255, null=True)),
                ('startDate', models.DateField()),
                ('endDate', models.DateField()),
                ('submittedDate', models.DateTimeField(blank=True, null=True)),
                ('reviewedDate', models.DateTimeField(blank=True, null=True)),
                ('reviewedBy', models.CharField(blank=True, max_length=50, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('challenges', models.TextField(blank=True, null=True)),
                ('nextSteps', models.TextField(blank=True, null=True)),
                ('createdAt', models.DateTimeField()),
                ('updatedAt', models.DateTimeField()),
            ],
            options={
                'db_table': 'api_workreport',
            },
        ),
        migrations.RenameField(
            model_name='enterprise',
            old_name='Address',
            new_name='address',
        ),
        migrations.RenameField(
            model_name='enterprise',
            old_name='Email',
            new_name='email',
        ),
        migrations.RenameField(
            model_name='enterprise',
            old_name='Industry',
            new_name='industry',
        ),
        migrations.RenameField(
            model_name='enterprise',
            old_name='Name',
            new_name='name',
        ),
        migrations.RenameField(
            model_name='enterprise',
            old_name='PhoneNumber',
            new_name='phone_number',
        ),
        migrations.RenameField(
            model_name='task',
            old_name='deadline',
            new_name='actual_end_date',
        ),
        migrations.RemoveField(
            model_name='enterprise',
            name='EnterpriseID',
        ),
        migrations.RemoveField(
            model_name='project',
            name='members',
        ),
        migrations.AddField(
            model_name='enterprise',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='enterprise',
            name='enterprise_id',
            field=models.CharField(default=1, max_length=50, primary_key=True, serialize=False),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='enterprise',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='project',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default='ent-default'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='project',
            name='progress',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='project',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='projectuser',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default='ent-default'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='projectuser',
            name='joined_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='task',
            name='category_name',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='task',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default='ent-default'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='task',
            name='due_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='task',
            name='priority',
            field=models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High'), ('Urgent', 'Urgent')], default='Medium', max_length=20),
        ),
        migrations.AddField(
            model_name='task',
            name='progress',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='task',
            name='start_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='task',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='team',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=datetime.datetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='team',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='teamuser',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='chatroom',
            name='created_at',
            field=models.DateTimeField(),
        ),
        migrations.AlterField(
            model_name='chatroom',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_chatrooms', to='api.user'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='created_at',
            field=models.DateTimeField(),
        ),
        migrations.AlterField(
            model_name='comment',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='api.user'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='related_project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='api.project'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='related_task',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='general_comments', to='api.task'),
        ),
        migrations.AlterField(
            model_name='document',
            name='related_project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='api.project'),
        ),
        migrations.AlterField(
            model_name='document',
            name='uploaded_at',
            field=models.DateTimeField(),
        ),
        migrations.AlterField(
            model_name='document',
            name='uploaded_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_documents', to='api.user'),
        ),
        migrations.AlterField(
            model_name='message',
            name='chatroom',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='api.chatroom'),
        ),
        migrations.AlterField(
            model_name='message',
            name='receiver_id',
            field=models.ForeignKey(blank=True, db_column='receiver_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to='api.user'),
        ),
        migrations.AlterField(
            model_name='message',
            name='sent_at',
            field=models.DateTimeField(),
        ),
        migrations.AlterField(
            model_name='notification',
            name='sent_date',
            field=models.DateTimeField(),
        ),
        migrations.AlterField(
            model_name='notification',
            name='sent_to',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='api.user'),
        ),
        migrations.AlterField(
            model_name='project',
            name='manager',
            field=models.ForeignKey(blank=True, db_column='manager_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_projects', to='api.user'),
        ),
        migrations.AlterField(
            model_name='project',
            name='project_id',
            field=models.CharField(max_length=50, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='project',
            name='status',
            field=models.CharField(choices=[('Planning', 'Planning'), ('In Progress', 'In Progress'), ('On Hold', 'On Hold'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled')], default='Planning', max_length=20),
        ),
        migrations.AlterField(
            model_name='projectuser',
            name='id',
            field=models.CharField(max_length=50, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='projectuser',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_members', to='api.project'),
        ),
        migrations.AlterField(
            model_name='projectuser',
            name='role_in_project',
            field=models.CharField(choices=[('Manager', 'Manager'), ('Member', 'Member'), ('Support', 'Support'), ('Observer', 'Observer')], max_length=20),
        ),
        migrations.AlterField(
            model_name='projectuser',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_assignments', to='api.user'),
        ),
        migrations.AlterField(
            model_name='task',
            name='assignee',
            field=models.ForeignKey(blank=True, db_column='assignee_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', to='api.user'),
        ),
        migrations.AlterField(
            model_name='task',
            name='project',
            field=models.ForeignKey(db_column='project_id', on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='api.project'),
        ),
        migrations.AlterField(
            model_name='task',
            name='status',
            field=models.CharField(choices=[('Todo', 'Todo'), ('In Progress', 'In Progress'), ('Review', 'Review'), ('Done', 'Done')], default='Todo', max_length=20),
        ),
        migrations.AlterField(
            model_name='task',
            name='task_id',
            field=models.CharField(max_length=50, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='team',
            name='leader',
            field=models.ForeignKey(blank=True, db_column='leader_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='led_teams', to='api.user'),
        ),
        migrations.AlterField(
            model_name='team',
            name='project',
            field=models.ForeignKey(db_column='project_id', on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='api.project'),
        ),
        migrations.AlterField(
            model_name='team',
            name='team_id',
            field=models.CharField(max_length=50, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='teamuser',
            name='id',
            field=models.CharField(max_length=50, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='teamuser',
            name='role_in_team',
            field=models.CharField(choices=[('Lead', 'Lead'), ('Member', 'Member'), ('Support', 'Support')], default='Member', max_length=20),
        ),
        migrations.AlterField(
            model_name='teamuser',
            name='team',
            field=models.ForeignKey(db_column='team_id', on_delete=django.db.models.deletion.CASCADE, related_name='members', to='api.team'),
        ),
        migrations.AlterField(
            model_name='teamuser',
            name='user',
            field=models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='team_memberships', to='api.user'),
        ),
        migrations.AlterField(
            model_name='user',
            name='avatar',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='enterprise',
            field=models.ForeignKey(db_column='enterprise_id', on_delete=django.db.models.deletion.CASCADE, related_name='users', to='api.enterprise'),
        ),
        migrations.AlterField(
            model_name='user',
            name='role',
            field=models.CharField(choices=[('Admin', 'Admin'), ('Manage', 'Manage'), ('User', 'User')], default='User', max_length=20),
        ),
        migrations.AlterField(
            model_name='user',
            name='user_id',
            field=models.CharField(max_length=50, primary_key=True, serialize=False),
        ),
        migrations.AlterUniqueTogether(
            name='projectuser',
            unique_together={('project', 'user')},
        ),
        migrations.AlterModelTable(
            name='chatroom',
            table='api_chatroom',
        ),
        migrations.AlterModelTable(
            name='comment',
            table='api_comment',
        ),
        migrations.AlterModelTable(
            name='document',
            table='api_document',
        ),
        migrations.AlterModelTable(
            name='enterprise',
            table='api_enterprise',
        ),
        migrations.AlterModelTable(
            name='message',
            table='api_message',
        ),
        migrations.AlterModelTable(
            name='notification',
            table='api_notification',
        ),
        migrations.AlterModelTable(
            name='project',
            table='api_project',
        ),
        migrations.AlterModelTable(
            name='projectuser',
            table='api_projectuser',
        ),
        migrations.AlterModelTable(
            name='task',
            table='api_task',
        ),
        migrations.AlterModelTable(
            name='team',
            table='api_team',
        ),
        migrations.AlterModelTable(
            name='teamuser',
            table='api_teamuser',
        ),
        migrations.AlterModelTable(
            name='user',
            table='api_user',
        ),
        migrations.CreateModel(
            name='WorkReportTask',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('reportId', models.CharField(max_length=50)),
                ('taskId', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('TODO', 'To Do'), ('IN_PROGRESS', 'In Progress'), ('DONE', 'Done')], max_length=20)),
                ('progress', models.IntegerField()),
                ('timeSpent', models.FloatField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='api.workreport')),
            ],
            options={
                'db_table': 'api_workreporttask',
            },
        ),
        migrations.CreateModel(
            name='TaskComment',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parent_comment', models.ForeignKey(blank=True, db_column='parent_comment_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='api.taskcomment')),
                ('task', models.ForeignKey(db_column='task_id', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='api.task')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='task_comments', to='api.user')),
            ],
            options={
                'db_table': 'api_taskcomment',
            },
        ),
        migrations.CreateModel(
            name='TaskCategory',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('tasks_count', models.IntegerField(default=0)),
                ('completed_tasks_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(db_column='project_id', on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='api.project')),
            ],
            options={
                'db_table': 'api_taskcategory',
            },
        ),
        migrations.CreateModel(
            name='TaskAttachment',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('file_url', models.CharField(max_length=255)),
                ('file_type', models.CharField(max_length=50)),
                ('file_size', models.IntegerField()),
                ('uploaded_at', models.DateTimeField()),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='api.task')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_attachments', to='api.user')),
            ],
            options={
                'db_table': 'api_taskattachment',
            },
        ),
        migrations.CreateModel(
            name='TaskAssignee',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('assigned_date', models.DateTimeField(blank=True, null=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignees', to='api.task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_assignments', to='api.user')),
            ],
            options={
                'db_table': 'api_taskassignee',
            },
        ),
        migrations.CreateModel(
            name='KnowledgeCategory',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('iconUrl', models.CharField(blank=True, max_length=255, null=True)),
                ('createdBy', models.CharField(max_length=50)),
                ('createdAt', models.DateTimeField()),
                ('updatedAt', models.DateTimeField()),
                ('articleCount', models.IntegerField(default=0)),
                ('parentId', models.CharField(blank=True, max_length=50, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='api.knowledgecategory')),
            ],
            options={
                'db_table': 'api_knowledgecategory',
            },
        ),
        migrations.CreateModel(
            name='KnowledgeArticle',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('summary', models.TextField(blank=True, null=True)),
                ('categoryId', models.CharField(max_length=50)),
                ('createdBy', models.CharField(max_length=50)),
                ('createdAt', models.DateTimeField()),
                ('updatedAt', models.DateTimeField()),
                ('viewCount', models.IntegerField(default=0)),
                ('likeCount', models.IntegerField(default=0)),
                ('isFeatured', models.BooleanField(default=False)),
                ('isPublished', models.BooleanField(default=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='api.knowledgecategory')),
            ],
            options={
                'db_table': 'api_knowledgearticle',
            },
        ),
        migrations.CreateModel(
            name='CalendarEventParticipant',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('eventId', models.CharField(max_length=50)),
                ('userId', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('ACCEPTED', 'Accepted'), ('DECLINED', 'Declined')], default='PENDING', max_length=20)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='api.calendar')),
            ],
            options={
                'db_table': 'api_calendareventparticipant',
            },
        ),
        migrations.AddField(
            model_name='task',
            name='category',
            field=models.ForeignKey(blank=True, db_column='category_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='api.taskcategory'),
        ),
    ]
